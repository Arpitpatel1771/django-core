import requests
import json
from core_django.settings import UMS_TOKEN_VERIFY_URL, UMS_INVALID_TOKEN_RESPONSE_CODE
import base64

def validate_token_against_secret(token):
    """
    Works only for tokens generated by UMS
    """
    request_data = {
        "token": token
    }

    response = requests.post(url=UMS_TOKEN_VERIFY_URL, data=request_data)
    response_data = json.loads(response.content)
    
    if response_data.get("code") == UMS_INVALID_TOKEN_RESPONSE_CODE:
        return False
    if response_data != {}:
        raise Exception(f"Unexpected response from UMS {token}, {response_data}")
    else:
        return True
    
def authorize_user_for_views(token, groups):
    """
    Assuming the token is verified and valid
    """
    if "*" in groups:
        return True

    header, payload, signature = token.split(".")

    payload = json.loads(base64.b64decode(payload))

    user_groups = payload.get("groups", [])

    for group in user_groups:
        if group in groups:
            return True
    
    return False




    

    